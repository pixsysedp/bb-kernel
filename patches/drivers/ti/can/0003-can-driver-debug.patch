From 2ba0f2f155c54f97e73e2a0c94037f6234e87a9f Mon Sep 17 00:00:00 2001
From: Antonio Galea <antonio.galea@gmail.com>
Date: Mon, 25 Nov 2024 15:02:12 +0100
Subject: [PATCH] 4.19.212-bone-rt-r71: can driver debug

---
 drivers/net/can/c_can/c_can_main.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/net/can/c_can/c_can_main.c b/drivers/net/can/c_can/c_can_main.c
index 245c8025af6f..0ee71a67a9f6 100644
--- a/drivers/net/can/c_can/c_can_main.c
+++ b/drivers/net/can/c_can/c_can_main.c
@@ -765,6 +765,7 @@ static void c_can_do_tx(struct net_device *dev)
 	else
 		pend = priv->read_reg(priv, C_CAN_INTPND2_REG);
 
+printk_ratelimited(KERN_ERR "[c_can_do_tx] pend=%u\n", pend);
 	while ((idx = ffs(pend))) {
 		idx--;
 		pend &= ~BIT(idx);
@@ -779,12 +780,14 @@ static void c_can_do_tx(struct net_device *dev)
 		bytes += priv->dlc[idx];
 		pkts++;
 	}
+printk_ratelimited(KERN_ERR "[c_can_do_tx] pkts=%u\n", pkts);
 
 	if (!pkts)
 		return;
 
 	tx_ring->tail += pkts;
 	if (c_can_get_tx_free(tx_ring)) {
+printk_ratelimited(KERN_ERR "[c_can_do_tx] c_can_get_tx_free(tx_ring)\n");
 		/* Make sure that anybody stopping the queue after
 		 * this sees the new tx_ring->tail.
 		 */
@@ -797,9 +800,11 @@ static void c_can_do_tx(struct net_device *dev)
 	can_led_event(dev, CAN_LED_EVENT_TX);
 
 	tail = c_can_get_tx_tail(tx_ring);
+printk_ratelimited(KERN_ERR "[c_can_do_tx] tail=%u\n", tail);
 
 	if (tail == 0) {
 		u8 head = c_can_get_tx_head(tx_ring);
+printk_ratelimited(KERN_ERR "[c_can_do_tx] head=%u\n", head);
 
 		/* Start transmission for all cached messages */
 		for (idx = tail; idx < head; idx++) {
@@ -1171,6 +1176,7 @@ static int c_can_poll(struct napi_struct *napi, int quota)
 	c_can_do_tx(dev);
 
 end:
+printk_ratelimited(KERN_ERR "[c_can_poll] work_done=%d, quota=%d\n", work_done, quota);
 	if (work_done < quota) {
 		napi_complete_done(napi, work_done);
 		/* enable all IRQs if we are not in bus off state */
-- 
2.39.5

